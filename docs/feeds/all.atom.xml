<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Franklin is Blogging</title><link href="https://yang2lalang.com/" rel="alternate"></link><link href="https://yang2lalang.com/feeds/all.atom.xml" rel="self"></link><id>https://yang2lalang.com/</id><updated>2021-10-28T13:42:00+02:00</updated><subtitle>Robotics Software Engineer, Part time Trader,  Consultant</subtitle><entry><title>How to deploy an Apache Server in a VPC cluster on AWS using Terraform</title><link href="https://yang2lalang.com/how-to-deploy-an-apache-server-in-a-vpc-cluster-on-aws-using-terraform.html" rel="alternate"></link><published>2021-10-28T13:42:00+02:00</published><updated>2021-10-28T13:42:00+02:00</updated><author><name>Franklin OKOLI</name></author><id>tag:yang2lalang.com,2021-10-28:/how-to-deploy-an-apache-server-in-a-vpc-cluster-on-aws-using-terraform.html</id><summary type="html">&lt;p&gt;This post shows how to create an live running Apache webserver on &lt;a href="https://aws.amazon.com"&gt;AWS&lt;/a&gt; using &lt;a href="https://terraform.io"&gt;terraform&lt;/a&gt;. The advantage of this method is to be able to use a repeatable method to spin up infrastructure for software deployment as the business grows. It also creates a clear, detailed  and easily transferrable information …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post shows how to create an live running Apache webserver on &lt;a href="https://aws.amazon.com"&gt;AWS&lt;/a&gt; using &lt;a href="https://terraform.io"&gt;terraform&lt;/a&gt;. The advantage of this method is to be able to use a repeatable method to spin up infrastructure for software deployment as the business grows. It also creates a clear, detailed  and easily transferrable information about the deployment architecture and the infrastructure in use at each point in time for any interested developer in the organization.&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Setup the alert first!&lt;/strong&gt;&lt;/h1&gt;
&lt;h2&gt;Insert indicator on chart&lt;/h2&gt;
&lt;p&gt;Lets say we went to be alert on a MA cross between the 5-period moving average and the 55-period exponential moving average on the 1hr EUR-USD chart. First we set-up our chart in trading view by including all the required indicators as shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Insert indicator on chart" class="img-center" src="https://yang2lalang.com/images/eurusdIndicators.png"&gt;&lt;/p&gt;
&lt;h2&gt;Create the alerts based on the indicator&lt;/h2&gt;
&lt;p&gt;Choose the alert condition, in the image below we have chosen to be alerted when ever there is cross between the MA-5 and the EMA-55 on the 1hr EUR-USD chart. We set &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Now the label just tags all emails we recieve from Tradingview and forwards them to our phone by MMS. A list of message gateways for some mobile phone carriers can be found &lt;a href="https://kb.sandisk.com/app/answers/detail/a_id/17056/~/list-of-mobile-carrier-gateway-addresses"&gt;here&lt;/a&gt; at the time of this writing. Please note that the forward address has to be verified to become activated by typing the code recieved from gmail to your mobile phone via MMS. In the next article, we show a special case where we can read and forward our emails by SMS using google scripts.&lt;/p&gt;</content><category term="Infrastructure"></category><category term="AWS"></category><category term="terraform"></category><category term="deployment"></category><category term="IAAC"></category></entry><entry><title>How to read and forward Trading view Alerts to sms using google scripts</title><link href="https://yang2lalang.com/how-to-read-and-forward-trading-view-alerts-to-sms-using-google-scripts.html" rel="alternate"></link><published>2018-09-28T11:42:00+02:00</published><updated>2018-09-28T11:42:00+02:00</updated><author><name>Franklin OKOLI</name></author><id>tag:yang2lalang.com,2018-09-28:/how-to-read-and-forward-trading-view-alerts-to-sms-using-google-scripts.html</id><summary type="html">&lt;p&gt;In the previous article, we proposed a method to create alerts on trading view, recieve these alerts by email, tag these alerts with a label and forward these alerts to our mobile phone by MMS. In this article we show a special case of a mobile operator &lt;a href="http://www.free.fr"&gt;(Free Mobile France …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the previous article, we proposed a method to create alerts on trading view, recieve these alerts by email, tag these alerts with a label and forward these alerts to our mobile phone by MMS. In this article we show a special case of a mobile operator &lt;a href="http://www.free.fr"&gt;(Free Mobile France)&lt;/a&gt; which offers the facility for us to forward email messages to our mobile phone as an sms message. We will make use of the google scripts and the powerful gmail API to access and read our email in real-time and forward the required messages. An excellent &lt;a href="http://webinventif.com/envoyer-sms-depuis-gmail-via-freemobile/"&gt;(tutorial)&lt;/a&gt; has been written on this subject though in french language. In this article, i will try to explain in detail how we can use the label we created previously to recieve trading view alerts by sms. We will be making use of google scripts to access our email in real time.&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;SMS notification by visiting a URL&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;The mobile operator &lt;a href="http://www.free.fr"&gt;(Free Mobile)&lt;/a&gt; allows us an option to receieve an sms notification to our mobile phone by visiting a personalized url created for each subscriber. The format for this personalized link is as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  https://smsapi.free-mobile.fr/sendmsg?user=Username&amp;amp;pass=PassCode&amp;amp;msg=Hello%20World%20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The username and password are generated by the user in the Free mobile user account. Please follow this &lt;a href="http://webinventif.com/envoyer-sms-depuis-gmail-via-freemobile/"&gt;(tutorial)&lt;/a&gt; to get a more detailed description of how to create this passcode. If your mobile operator offers a service like this, it can be possible to recieve sms notifications in a similar manner by using the url provided by your mobile operator. &lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Script to read our email&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href="https://script.google.com"&gt;(google scripts)&lt;/a&gt; and click on &lt;strong&gt;New Script&lt;/strong&gt; to create a new script. The script that reads our email is a single function written using google script library. The script is called periodically to check the email for new messages tagged with the label we created. Let us assume we created a label called &lt;strong&gt;"tradingview"&lt;/strong&gt; as in our previous tutorial. The first line in our function tells gmail to get all messages with the label &lt;strong&gt;"tradingview"&lt;/strong&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GmailApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserLabelByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tradingview&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we put some error checking incase we recieve an empty response vector, we create a new label otherwise we continue to run the rest of the code within the else block.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;GmailApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tradingview&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//continue running here ...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gmail organizes related messages in threads. For messages tagged with our label of interest, we are interested in the newest (or latest) unread message in this thread. So we get latest thread in the thread array using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getThreads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we loop through the threads to check for unread messages and for all the unread messages we store the message in a variable while skipping the read messages. The rest of the code in the for loop is explained subsequently.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
       &lt;span class="p"&gt;{&lt;/span&gt;  
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMessageCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUnread&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
           &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
           &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="c1"&gt;//code continues till the end of for loop ... &lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we can extract the important parts of the unread message that we like such as the sender, subject , date and the message body.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="kr"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFrom&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSubject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// date/time&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;htmlBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBody&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is important to note here that the message we recieveved from &lt;a href="noreply@tradingview.com"&gt;trading view&lt;/a&gt; will be in a html format. The html tags and and attributes must be stripped off in order to obtain a short, concise and readable message that will be forwarded to us via sms. In order top do this we make use of a script contributed by a &lt;a href="https://stackoverflow.com/questions/29648235/google-apps-scraping-script-to-run-regullary-till-all-sites-inner-pages-are-ext"&gt;user on stack overflow &lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getTextFromHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;htmlBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally we create a url containing the unread gmail messages labelled &lt;strong&gt;"tradingview"&lt;/strong&gt; using the html body as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://smsapi.free-mobile.fr/sendmsg?user=35625729&amp;amp;pass=ZggZIzu5RoKzKx&amp;amp;msg=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tradingView- &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="nx"&gt;msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This url is encoded to avoid errors related &lt;a href="https://www.w3schools.com/tags/ref_urlencode.asp"&gt;using unsafe characters in a url&lt;/a&gt; and ensure that only ASCII character-set are used.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;urlencoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;encodeURI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We make use of the gmail api function &lt;strong&gt;UrlFetchApp&lt;/strong&gt; to fetch the url. This services is used to fetch resources and to communicate with hosts on the internet according to it's  &lt;a href="https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UrlFetchApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;muteHttpExceptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;escaping&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After reading an uread message and forwarding it to our mobile phone by sms, the last thing we want to do is to mark this email as read:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;markRead&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The entire script is a function named &lt;strong&gt;Gmail_send_sms&lt;/strong&gt; is as shown below: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Gmail_send_sms&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GmailApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserLabelByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tradingview&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;GmailApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tradingview&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getThreads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ow"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMessageCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUnread&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
       &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="kr"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFrom&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSubject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// date/time&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;htmlBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBody&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getTextFromHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;htmlBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://smsapi.free-mobile.fr/sendmsg?user=35625729&amp;amp;pass=ZggZIzu5RoKzKx&amp;amp;msg=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tradingView- &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="nx"&gt;msg&lt;/span&gt; 
      &lt;span class="nx"&gt;urlencoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;encodeURI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="c1"&gt;//var response = UrlFetchApp.fetch(url);&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UrlFetchApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;muteHttpExceptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;escaping&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;markRead&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script that enables us to strip out the html tags and attributes is a function called &lt;strong&gt;getTextFromHtml&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getTextFromHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;getTextFromNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getElement&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getTextFromNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XmlText&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toXmlString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XmlElement&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getNodes&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getTextFromNode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We will now save this script for the first time during which we are prompted by google authentication to review permissions for the script in order to grant access to the script to run in our gmail account.&lt;/p&gt;
&lt;p&gt;&lt;img alt="authorize_gmail" class="img-center" src="https://yang2lalang.com/images/authorize_gmail.png"&gt;&lt;/p&gt;
&lt;p&gt;We want our script to run periodically to check our email and forward the unread messages corresponding to a particular label by sms. So we set a trigger which calls the script periodically by going to &lt;strong&gt;Edit&lt;/strong&gt; &amp;gt; &lt;strong&gt;Current project's triggers&lt;/strong&gt; &amp;gt; &lt;strong&gt;Click here to add one now&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="event_trigger" class="img-center" src="https://yang2lalang.com/images/event_trigger.png"&gt;&lt;/p&gt;
&lt;p&gt;Choose the name of the script under &lt;strong&gt;Run&lt;/strong&gt; and under &lt;strong&gt;Event&lt;/strong&gt; we select Time-driven. We can then shoose if we want the script to run daily, hourly or by the minute. Click &lt;strong&gt;Save&lt;/strong&gt; to save all changes. Now our script is well set-up and running. New email messages from Trading view will be forwarded to our mobile phone as sms notifications.&lt;/p&gt;</content><category term="Trading"></category><category term="Tradingview"></category><category term="sms"></category><category term="gmail"></category><category term="Free.fr"></category></entry><entry><title>How to get Trading view Alerts on your mobile phone for free</title><link href="https://yang2lalang.com/how-to-get-trading-view-alerts-on-your-mobile-phone-for-free.html" rel="alternate"></link><published>2018-09-17T12:19:00+02:00</published><updated>2018-09-17T12:19:00+02:00</updated><author><name>Franklin OKOLI</name></author><id>tag:yang2lalang.com,2018-09-17:/how-to-get-trading-view-alerts-on-your-mobile-phone-for-free.html</id><summary type="html">&lt;p&gt;This will be the first post in our new blog! Today i am going to show how we can recieve alerts created on &lt;a href="https://www.tradingview.com/"&gt;Trading view&lt;/a&gt; by MMS directly on your mobile phone for free. At the time of this writing, trading view only sends email and email-to-sms alerts for free …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This will be the first post in our new blog! Today i am going to show how we can recieve alerts created on &lt;a href="https://www.tradingview.com/"&gt;Trading view&lt;/a&gt; by MMS directly on your mobile phone for free. At the time of this writing, trading view only sends email and email-to-sms alerts for free while the sms alerts are reserved for premium subscribers only. The rest of us minions have to fork out a hefty fine for the premium plan or make do with email alerts.&lt;/p&gt;
&lt;p&gt;But why do we even need mobile alerts when we can get the same information by email ?  Well, in trading, especially if you trade intra day, you might not always be in front of your computer to follow the charts so most traders set alerts to monitor movements in the market. If we get only email alerts or email-to-sms alerts, this leaves us checking our email every minute just to see if we have an alert!!! Hardly practical. Now i will not go into detail into what happens when you are on the road or without email access or having lunch at a fancy resturant, let's just say that you always want to be alerted as soon as the market moves. So we need our alerts to delivered as an sms messages to our mobile phone. This method in my view is easier to stay connected to the market than to always be opening an email box and checking for an alert.&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Setup the alert first!&lt;/strong&gt;&lt;/h1&gt;
&lt;h2&gt;Insert indicator on chart&lt;/h2&gt;
&lt;p&gt;Lets say we went to be alert on a MA cross between the 5-period moving average and the 55-period exponential moving average on the 1hr EUR-USD chart. First we set-up our chart in trading view by including all the required indicators as shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Insert indicator on chart" class="img-center" src="https://yang2lalang.com/images/eurusdIndicators.png"&gt;&lt;/p&gt;
&lt;h2&gt;Create the alerts based on the indicator&lt;/h2&gt;
&lt;p&gt;Choose the alert condition, in the image below we have chosen to be alerted when ever there is cross between the MA-5 and the EMA-55 on the 1hr EUR-USD chart. We set our alert to go off once per minute since we want to continually test this condition every minute  You can also choose Once-Per-Bar Close  but this causes the alert to be triggered only after the bar closes. Set the Alert actions to Email-to-sms, this is the most important part. Email-to-sms is a free service on &lt;a href="https://www.tradingview.com/"&gt;Trading view&lt;/a&gt; that let's send your alerts to an email which you have chosen in your profile. The email message can be customized by editing the message field and is sent in plain text removing all the clutter and images in a simple E-mail alert. We propose that you set-up a &lt;a href="https://www.gmail.com/"&gt;gmail&lt;/a&gt; account for reciving these Email-to-sms alerts as our tutorial is based on gmail features.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Create Alerts based on indicator" class="img-center" src="https://yang2lalang.com/images/createalert.png"&gt;&lt;/p&gt;
&lt;p&gt;Now that we have our Alerts running and we see our alerts delivered as email messages but we need to have them delivered to our mobile phone. Several options exist:&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Forward Email alerts to mobile phone&lt;/strong&gt;&lt;/h1&gt;
&lt;h2&gt;1. First Case: Deliver Alerts by MMS&lt;/h2&gt;
&lt;p&gt;Multi-media messaging services (MMS) are usually available on most network carriers. This method requires us to label the email alerts that we recieve from trading view and then forward the same message by mms to our mobile phone. We will assume that your network carrier is not blocking you from recieving MMS for free (I have seen this in 2018!!!). On gmail we click on &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Forwarding and POP/IMAP&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add a forwarding address&lt;/strong&gt;. Here you have to input your Mobile Message Gateway usually in the format;  &lt;strong&gt;number@mms.operatorgateway.com&lt;/strong&gt;.  This is an email to which gmail forwards email messages and you recieve this as an MMS message in your mobile phone. Your mobile carrier has to activate this feature for it to work and provide you with a mobile message gateway for you recieve these emails.&lt;/p&gt;
&lt;h2&gt;2. Create a label in gmail and forward emails to the MMS gateway&lt;/h2&gt;
&lt;p&gt;In gmail click &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Filters and Blocked Addresses&lt;/strong&gt; &amp;gt; &lt;strong&gt;Create a new filter&lt;/strong&gt;
&lt;img alt="Create a label in gmail" class="img-center" src="https://yang2lalang.com/images/createfilter.png"&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;From&lt;/strong&gt; field of the form that we are presented, we write the &lt;a href="noreply@tradingview.com"&gt;email address used by Trading view&lt;/a&gt; to send us alerts. This email might change from time to time just look at the sender email and include it in this field to identify the sender and click  &lt;strong&gt;Create filter with this search&lt;/strong&gt; at the bottom right of this form.&lt;/p&gt;
&lt;p&gt;From the search results we will be presented with a form for actions to perform on a message matching the search. Select the check box &lt;strong&gt;Apply Label&lt;/strong&gt; and click &lt;strong&gt;Choose label&lt;/strong&gt;. A drop-down menu is presented and we create a label by choosing &lt;strong&gt;New Label&lt;/strong&gt;. Set name the label as &lt;strong&gt;tradingview&lt;/strong&gt; or to another name of your choice. Select the check box &lt;strong&gt;Forward it&lt;/strong&gt; and here select the forwarding address previously created and click &lt;strong&gt;Create filter&lt;/strong&gt; to finish the process.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Create a label in gmail" class="img-center" src="https://yang2lalang.com/images/labeltradingview.png"&gt;&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Now the label just tags all emails we recieve from Tradingview and forwards them to our phone by MMS. A list of message gateways for some mobile phone carriers can be found &lt;a href="https://kb.sandisk.com/app/answers/detail/a_id/17056/~/list-of-mobile-carrier-gateway-addresses"&gt;here&lt;/a&gt; at the time of this writing. Please note that the forward address has to be verified to become activated by typing the code recieved from gmail to your mobile phone via MMS. In the next article, we show a special case where we can read and forward our emails by SMS using google scripts.&lt;/p&gt;</content><category term="Trading"></category><category term="Tradingview"></category><category term="sms"></category><category term="gmail"></category></entry></feed>